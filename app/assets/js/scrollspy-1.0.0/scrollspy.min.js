/**
 * Extend jquery with a scrollspy plugin.
 * This watches the window scroll and fires events when elements are scrolled into viewport.
 *
 * @author Copyright 2013 John Smart
 * @license https://raw.github.com/thesmart/jquery-scrollspy/master/LICENSE
 * @see https://github.com/thesmart
 * @version 0.0.8
 */(function(e){function o(t,r,i,s){var o=e();e.each(n,function(e,n){var u=n.offset().top,a=n.offset().left,f=a+n.width(),l=u+n.height(),c=!(a>r||f<s||u>i||l<t);c&&o.push(n)});return o}function u(){++s;var n=t.scrollTop(),i=t.scrollLeft(),u=i+t.width(),a=n+t.height(),f=o(n,u,a,i);e.each(f,function(e,t){var n=t.data("scrollSpy:ticks");typeof n!="number"&&t.triggerHandler("scrollSpy:enter");t.data("scrollSpy:ticks",s)});e.each(r,function(e,t){var n=t.data("scrollSpy:ticks");if(typeof n=="number"&&n!==s){t.triggerHandler("scrollSpy:exit");t.data("scrollSpy:ticks",null)}});r=f}var t=e(window),n=[],r=[],i=!1,s=0;e.scrollSpy=function(r){r=e(r);r.each(function(t,r){n.push(e(r))});if(!i){t.on("scroll",u);i=!0;setTimeout(function(){e(document).ready(u)},0)}return r};e.fn.scrollSpy=function(){return e.scrollSpy(e(this))}})(jQuery);